<!DOCTYPE html>
<html lang="ko">

<head>
  <meta charset="utf-8">
  <title>createPcMap</title>
  <style>
    header {
      text-align: center;
      margin-top: 100px;
    }

    fieldset {
      text-align: center;
      height: 100px;
      padding-bottom: 20px;
    }

    .insertTd {
      width: 50px;
      height: 50px;
      background-color: yellow;
    }
  </style>
</head>

<body>
  <header>
    <p><img src="./pibang.png" width="320" height="100" alt="logo" text-align="center"></p>
  </header>
  <fieldset align="center">
    <legend>
      <h2>좌석등록</h2></legend>
    <span><label>행 : [<span id="cols">10</span>]</label>
    </span>
    <span><label>열 : [<span id="rows">10</span>]</label>
    </span>
    <span><label>층 : <input type="number" name="floor" value="1" style="width:40px"></label></span>
    <input type="button" onclick="addTopLine()" value="Top+">
    <input type="button" onclick="removeTopLine()" value="Top-">
    <input type="button" onclick="addBottomLine()" value="Bottom+">
    <input type="button" onclick="removeBottomLine()" value="Bottom-">
    <input type="button" onclick="addLeftLine()" value="Left+">
    <input type="button" onclick="removeLeftLine()" value="Left-">
    <input type="button" onclick="addRightLine()" value="Right+">
    <input type="button" onclick="removeRightLine()" value="Right-">
  </fieldset>

  <div id="MapDiv">

  </div>

  <script>
    var pcNum = []; // pc방 컴퓨터 배열
    var PcTable = document.createElement("table"); // 표시할 테이블
    PcTable.setAttribute("id", "PcMap");
    createPcMap(5, 5); // page 열면 10x10 테이블 출력

    function createPcMap(ro, co) {
      for (var i = 0; i < ro; i++) {
        var newTr = document.createElement("tr");
        for (var j = 0; j < co; j++) {
          var td = document.createElement("td");
          insertTd(td);
          td.innerHTML = i * 10 + j + 1;
          newTr.appendChild(td);
        }
        PcTable.appendChild(newTr);
      }
      // console.log(PcTable); // 주석처리

      var MapDiv = document.getElementById("MapDiv"); // MapTable에 추가
      MapDiv.appendChild(PcTable);
    }

    function changePcMapNum(ro, co) {
      for (var i = 0; i < ro; i++) {
        for (var j = 0; j < co; j++) {
          PcTable.children[i].children[j].innerHTML = i * 10 + j + 1;
        }
      }
    }

    function insertTd(p) {
      p.setAttribute("class", "insertTd");
      p.addEventListener("click", function() {
        if (this.value == null) {
          pcNum[pcNum.length] = this;
          pcNum[pcNum.length - 1].value = this.innerText;
          pcNum[pcNum.length - 1].innerHTML = pcNum.length;
          this.style.backgroundColor = "blue";
        } else {
          deleteTd(this);
        }
      });
    }
    function changeTd(p, q) {
      var t = document.createElement("td");
      t.value = q.value;
      t.innerHTML=q.innerText;
      t.style.backgroundColor = q.style.backgroundColor;
      q.value=p.value;
      q.innerHTML=p.innerText;
      q.style.backgroundColor = p.style.backgroundColor;
      p.value=t.value;
      p.innerHTML=t.innerText;
      p.style.backgroundColor = t.style.backgroundColor;
    }

    function deleteTd(p) {
      for (var i = p.innerHTML; i < pcNum.length; i++) {
        pcNum[i].innerHTML = i;
      }
      pcNum.splice(p.innerText-1, 1);
      p.innerHTML = p.value;
      p.value = null;
      p.style.backgroundColor = "yellow";
    }

    function addTopLine() {
      var row = PcTable.insertRow(0);
      for (var i = 0; i < PcTable.children[1].children.length; i++) {
        var inTd = row.insertCell(i);
        inTd.innerHTML = i+1;
        insertTd(inTd);
      }
      document.getElementById('cols').innerHTML = PcTable.children.length;
      changePcMapNum(PcTable.children.length, PcTable.children[0].children.length);
    }

    function removeTopLine() {
      if (PcTable.rows.length < 1) return;
      for (var i = 0; i < PcTable.children[0].children.length; i++) {
        for (var j = 1; j < PcTable.children.length; j++) {
          changeTd(PcTable.children[j-1].children[i], PcTable.children[j].children[i]);
        }
        // deleteTd(PcTable.children[PcTable.children.length-1].children[i]); // 선택해제
      }
      PcTable.deleteRow(0);
      document.getElementById('cols').innerHTML = PcTable.children.length;
      changePcMapNum(PcTable.children.length, PcTable.children[0].children.length);
    }

    function addBottomLine() {
      var row = PcTable.insertRow(PcTable.rows.length);
      for (var i = 0; i < maxRow; i++) {
        insertTd(row.insertCell(i));
      }
      maxCol++;
      document.getElementById('cols').innerHTML = maxCol;
    }

    function removeBottomLine() {
      if (PcTable.rows.length < 1) return;
      PcTable.deleteRow(PcTable.rows.length - 1);
      maxCol--;
      document.getElementById('cols').innerHTML = maxCol;
    }

    function addLeftLine() {
      var col = PcTable.insertRow(PcTable.rows.length);
      for (var i = 0; i < maxRow; i++) {
        insertTd(col.insertCell(i));
      }
      maxCol++;
      document.getElementById('cols').innerHTML = maxCol;
    }

    function removeLeftLine() {
      if (PcTable.rows.length < 1) return;
      PcTable.deleteRow(PcTable.rows.length - 1);
      maxCol--;
      document.getElementById('cols').innerHTML = maxCol;
    }
  </script>

</body>

</html>
